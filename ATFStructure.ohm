ATFStructure {

amp (an ampersand)
    = "&"

at (an at sign)
   = "@"

dollar (a dollar sign)
   = "$"

hash (a hash sign)
   = "#"

pCode (a P-Code)
    = "P" digit digit digit digit digit digit

lineTerminator
    = "\r\n"
    | "\n"

nonLineTerminator (a character that is not a newline)
    = ~lineTerminator any

integer
    = digit+

integerRange
    = integer "-" integer

atfProtocolLanguage (a protocol code for a valid ATF language)
    = "akk-x-oldakk"
	| "ua"
    | "akk-x-earakk"
	| "akk-x-oldass"
	| "akk-x-oldbab"
	| "akk-x-obperi"
	| "akk-x-midass"
	| "akk-x-midbab"
	| "akk-x-mbperi"
	| "akk-x-neoass"
	| "akk-x-neobab"
	| "akk-x-ltebab"
	| "akk-x-stdbab"
	| "akk-x-conakk"
	| "hit"
    | "sux-x-emegir"
	| "sux-x-emesal"
	| "sux-x-syllabic"
	| "sux-x-udgalnun"
    | "sux"

atfFeature (a procotol feature for ATF hash lines)
    = ~lineTerminator any+

atfProtocolToken (a token introducing an ATF protocol, a word followed by a colon)
    = letter+ ":"

atObject
    = "tablet"
    | "envelope"
    | "bulla"
    | "prism"
    | atObjectFragment
    | atObjectSeal
    | atObjectGeneric

atObjectFragment
    = "fragment" space+ letter

atObjectSeal
    = "object" space+ "seal"

atObjectGeneric
    = "object" space+ nonLineTerminator+

atObjectSurfaceGeneric
    = "surface" space+ nonLineTerminator+

atObjectFaceGeneric
    = "face" space+ letter

atObjectSurface
    = "obverse"
    | "reverse"
    | "left"
    | "right"
    | "top"
    | "bottom"
    | atObjectSurfaceGeneric
    | atObjectFaceGeneric

atObjectHeading
    = "h" digit

discourseShortcut
    = "colophon"
    | "date"
    | "catchline"
    | "signatures"
    | "signature"
    | "summary"
    | "witnesses"

dollarQualification (a dollar line qualification state word)
    = "at least"
    | "at most"
    | "about"

dollarExtent (a dollar line extent state word)
    = "n"
    | "several"
    | "some"
    | integer
    | integerRange
    | "rest of"
    | "start of"
    | "beginning of"
    | "middle of"
    | "end of"

dollarScope (a dollar line scope state word)
    = atObject
    | atObjectSurface
    | "columns"
    | "column"
    | "lines"
    | "line"
    | "cases"
    | "case"
    | "surface"

dollarState (a dollar line state's state word)
    = "blank"
    | "broken"
    | "effaced"
    | "illegible"
    | "missing"
    | "traces"

dollarRuling (a dollar ruling numeric word)
    = "single"
    | "double"
    | "triple"
    | "quadruple"

textLineBeginning (the beginning of an ATF text line)
    = ~space ~"." any


lineTerminatorOrEnd
    = lineTerminator
    | end



// Semantic Rules

// Hash Lines
TranslationProtocolLine
    = #(hash "tr." letter+ ":" space+) nonLineTerminator* lineTerminatorOrEnd

BasketProtocolLine (a basket protocol line)
    = #("#basket: ") nonLineTerminator+ lineTerminatorOrEnd

ATFProtocolLine (an ATF protocol line for introducing directives)
    = #("#atf: ") "lang" atfProtocolLanguage lineTerminatorOrEnd //--atfLangDirective
    | #("#atf: ") "use" atfFeature lineTerminatorOrEnd //--atfFeatureDirective

BibProtocolLine (a bibliographic protocol hash line)
    = #("#bib: ") nonLineTerminator+ lineTerminatorOrEnd

LemLineProtocolLine (a lemmatization for the previous line)
    = #("#lem: ") nonLineTerminator+ lineTerminatorOrEnd

LemmatizerProtocolLine (introduces directives to the lemmatization subsystem)
    = #("#lemmatizer: ") nonLineTerminator+ lineTerminatorOrEnd

LinkProtocolLine (a directive to the linkage subsystem)
    = #("#link: def ") nonLineTerminator+ lineTerminatorOrEnd

NoteProtocolLine (a note that will be included in rendered ATF text)
    = #("#note: ") nonLineTerminator+ lineTerminatorOrEnd

HashOuterProtocolLine (a protocol line that may appear at the very beginning of a document)
    = BasketProtocolLine

HashStartProtocolLine (a protocol line that may occur at the start of a text)
    = ATFProtocolLine
    | BibProtocolLine
    | LinkProtocolLine
    | TranslationProtocolLine
    //| VersionProtocolLine (not yet implemented)

HashAfterProtocolLine (a protocol line that should appear only after other protocols have been declared)
    = NoteProtocolLine

HashInterProtocolLine (a protocol line that may appear between lines of text)
    = BibProtocolLine
    | LemLineProtocolLine
    | NoteProtocolLine
    | TranslationProtocolLine
    //| VarProtocolLine (not yet implemented)

// todo: add var:, version:, and syntax:

HashCommentLine (a hash line comment line)
    = #( hash (~atfProtocolToken nonLineTerminator)+) lineTerminatorOrEnd

HashLine
    = HashOuterProtocolLine
    | HashStartProtocolLine
    | HashAfterProtocolLine
    | HashInterProtocolLine
    | HashCommentLine

AmpLine (an Amp Line)
    = #(amp pCode) "=" nonLineTerminator+ lineTerminatorOrEnd

AtObjectLine (an At Line, representing an object, such as a tablet or bulla)
    = #(at atObject) lineTerminatorOrEnd

AtSurfaceLine (an At Line, representing a given surface of an object, such as reverse, top, etc)
    = #(at atObjectSurface) lineTerminatorOrEnd

AtHeadingLine (an At Line, representing a heading like h3 etc)
    = #(at atObjectHeading) lineTerminatorOrEnd

AtDivisionLine (an At Line representing some division of the document)
    = #(at "m=" letter+) (letter+ digit+)? lineTerminatorOrEnd

AtDiscourseLine (an At Line representing a shorthand discursive division, like colophon etc)
    = #(at discourseShortcut) lineTerminatorOrEnd

AtMilestoneLine (an At Line representing a Division or Discourse specification)
    = AtDivisionLine
    | AtDiscourseLine

AtColumnLine (An At Line indicating the column number being transliterated)
    = #(at "column" space+) integer lineTerminatorOrEnd

DollarLineStrict (a Dollar Line following the "strict" conventions describing its state)
    = #(dollar space+) dollarQualification? dollarExtent? dollarScope? dollarState nonLineTerminator* lineTerminatorOrEnd

DollarSealLine (a Dollar Line referring to a specified seal number)
    = #(dollar space+) "seal" integer lineTerminatorOrEnd

DollarRulingLine
    = #(dollar space+) dollarRuling "ruling" lineTerminatorOrEnd

DollarLineLoose
    = #(dollar space+) "(" ~")" nonLineTerminator+ ")"

DollarLine (a line beginning with a dollar sign that indicates something about the state of the text)
    = DollarSealLine
    | DollarRulingLine
    | DollarLineStrict
    | DollarLineLoose

AtLine
    = AtObjectLine
    | AtHeadingLine
    | AtSurfaceLine
    | AtColumnLine

TextLine
    = #(textLineBeginning+ "." space) nonLineTerminator+ lineTerminatorOrEnd

ContinuedTextLine
    = ~AtLine ~DollarLine ~AmpLine ~HashLine nonLineTerminator+ lineTerminatorOrEnd

TextLines
    = TextLine ContinuedTextLine+

UnknownLine
    = nonLineTerminator+ lineTerminatorOrEnd

Line (any kind of Line)
    = AmpLine
    | HashLine
    | AtLine
    | DollarLine
    | TextLines
    | TextLine
    | UnknownLine
    | lineTerminator


Lines = Line+

Document (an ATF document)
    = Line+ end


// Basic whitespace and line termination handling.
    // Note that we override the default Ohm definition
    // of `space` to only be spaces or tabs, and NOT
    // any of the newline characters
    space := whitespace
    whitespace
      = "\t"
      | "\x0B"    -- verticalTab
      | "\x0C"    -- formFeed
      | " "
      | "\u00A0"  -- noBreakSpace
      | "\uFEFF"  -- byteOrderMark


// TEMP!
// Copying basic document structure from the NE grammar
// in the JTF repo for now
Main
    = Outer? Start Inter+ After? end

Outer
    = HashOuterProtocolLine

Start
    = AmpLine HashStartProtocolLine*

Inter
    = AtLine
    | HashInterProtocolLine
    | DollarLine
    | TextLine

After
    = HashAfterProtocolLine
}

